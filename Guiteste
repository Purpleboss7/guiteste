-- Função para criar botão no Script Hub
local function CreateButton(tab, name, toolName)
    return tab:CreateButton({
        Name = name,
        Callback = function()
            local args = {
                [1] = {
                    ["Action"] = "EquipTool",
                    ["ToolName"] = toolName
                }
            }

            game:GetService("ReplicatedStorage").Remotes.GuiEvent:FireServer(unpack(args))
        end,
    })
end

-- Função para criar loop com função específica
local function CreateLoop(func)
    _G.Loop = true
    while _G.Loop and task.wait() do
        func()
    end
end

-- Carregar o Script Hub
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "Roblox Script Hub",
    LoadingTitle = "Script Hub",
    LoadingSubtitle = "by OpenAI",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil,
        FileName = "ScriptHubSettings"
    },
})

local PlayerTab = Window:CreateTab("Player", 4483362458)

-- Adicionar botões para equipar ferramentas
local LargeBackpackButton = CreateButton(PlayerTab, "Equip Large Backpack", "Large Backpack")
local CyberSwordButton = CreateButton(PlayerTab, "Equip Cyber Sword", "Cyber Sword")
local CyberPickaxeButton = CreateButton(PlayerTab, "Equip Cyber Pickaxe", "Cyber Pickaxe")

-- Adicionar loops para coletar instâncias e vender itens
CreateLoop(function()
    local args = {
        [1] = {
            ["Type"] = "Stone",
            ["Action"] = "InstanceCollected",
            ["Count"] = 10000
        }
    }

    game:GetService("ReplicatedStorage").Remotes.GuiEvent:FireServer(unpack(args))
end)

CreateLoop(function()
    local args = {
        [1] = {
            ["Type"] = "EmeraldPice3",
            ["Action"] = "InstanceCollected",
            ["Count"] = 100
        }
    }

    game:GetService("ReplicatedStorage").Remotes.GuiEvent:FireServer(unpack(args))
end)

CreateLoop(function()
    local args = {
        [1] = {
            ["Action"] = "Sold"
        }
    }

    game:GetService("ReplicatedStorage").Remotes.GuiEvent:FireServer(unpack(args))
end)
