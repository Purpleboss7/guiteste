-- Criar um objeto ScreenGui
local gui = Instance.new("ScreenGui")
gui.Parent = game.Players.LocalPlayer.PlayerGui

-- Criar um objeto Frame para organizar os botões
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 0, 0, 0)
frame.Position = UDim2.new(0.6, 5, 0.2, 5)
frame.BackgroundTransparency = 0
frame.BackgroundColor3 = Color3.new(0, 0, 0)
frame.BorderColor3 = Color3.new(0, 0, 0)
frame.BorderSizePixel = 1
frame.Parent = gui

-- Função para criar botões
local function createButton(name, action)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, 120, 0, 30)
    button.Position = UDim2.new(5, 10, 0, 10 + (#frame:GetChildren() * 40))
    button.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
    button.BorderColor3 = Color3.new(0, 0, 0)
    button.BorderSizePixel = 2
    button.TextColor3 = Color3.new(1, 1, 1)
    button.Text = name
    button.Parent = frame

    button.MouseButton1Click:Connect(function()
        action()
    end)
end

-- Função para parar o loop
local function stopLoop()
    _G.Loop = false
end

-- Adicionar botões com funções
createButton("Collect Stones", function()
    _G.Loop = true
    while _G.Loop and task.wait() do
        local args = {
            [1] = {
                ["Type"] = "Stone",
                ["Action"] = "InstanceCollected",
                ["Count"] = 10000
            }
        }
        game:GetService("ReplicatedStorage").Remotes.GuiEvent:FireServer(unpack(args))
    end
end)

createButton("Equip Large Backpack", function()
    local args = {
        [1] = {
            ["Action"] = "EquipTool",
            ["ToolName"] = "Large Backpack"
        }
    }
    game:GetService("ReplicatedStorage").Remotes.GuiEvent:FireServer(unpack(args))
end)

createButton("Equip Cyber Sword", function()
    local args = {
        [1] = {
            ["Action"] = "EquipTool",
            ["ToolName"] = "Cyber Sword"
        }
    }
    game:GetService("ReplicatedStorage").Remotes.GuiEvent:FireServer(unpack(args))
end)

createButton("Equip Cyber Pickaxe", function()
    local args = {
        [1] = {
            ["Action"] = "EquipTool",
            ["ToolName"] = "Cyber Pickaxe"
        }
    }
    game:GetService("ReplicatedStorage").Remotes.GuiEvent:FireServer(unpack(args))
end)

createButton("Collect Emeralds", function()
    _G.Loop = true
    while _G.Loop and task.wait() do
        local args = {
            [1] = {
                ["Type"] = "EmeraldPice3",
                ["Action"] = "InstanceCollected",
                ["Count"] = 100
            }
        }
        game:GetService("ReplicatedStorage").Remotes.GuiEvent:FireServer(unpack(args))
    end
end)

createButton("Sell Items", function()
    _G.Loop = true
    while _G.Loop and task.wait(1) do
        local args = {
            [1] = {
                ["Action"] = "Sold"
            }
        }
        game:GetService("ReplicatedStorage").Remotes.GuiEvent:FireServer(unpack(args))
    end
end)

createButton("Stop Loop", stopLoop)

-- Adicionar botão para chocar pets
createButton("Hatch Pet", function()
    _G.Loop = true
    while _G.Loop and task.wait(1) do
        local args = {
            [1] = workspace.Incubators.Basic,
            [2] = 3
        }

        game:GetService("ReplicatedStorage").PetsFolder.Remotes.HatchPet:FireServer(unpack(args))
    end
end)

-- Function to delete pets in a loop
local function deletePetsLoop(petName)
    _G.Loop = true
    while _G.Loop and wait() do
        local args = {[1] = petName}
        game:GetService("ReplicatedStorage").PetsFolder.Remotes.DeletePet:FireServer(unpack(args))
    end
end

createButton("Delete All Pets", function()
    spawn(function()
        _G.Loop = false  -- Stop any existing loops
        
        local petNamesToDelete = {"Cat", "Pig", "Dog", "Bear"}
        
        -- Start a deletion loop for each pet name
        for _, petName in ipairs(petNamesToDelete) do
            spawn(function()
                deletePetsLoop(petName)
            end)
        end
    end)
end)


