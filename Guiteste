-- Criar um objeto ScreenGui
local gui = Instance.new("ScreenGui")
gui.Parent = game.Players.LocalPlayer.PlayerGui

-- Criar um objeto Frame para organizar os botões
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 200, 0, 300)
frame.Position = UDim2.new(0, 10, 0, 10)
frame.BackgroundColor3 = Color3.fromRGB(50, 0, 50) -- Fundo roxo escuro
frame.Active = true
frame.Parent = gui

-- Variáveis para controlar o estado do GUI
local guiOpen = true
local isDragging = false
local offset = Vector2.new(0, 0)

-- Função para criar botões
local function createButton(name, action)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, 180, 0, 40)
    button.Position = UDim2.new(0, 10, 0, 10 + (#frame:GetChildren() * 50))
    button.BackgroundColor3 = Color3.fromRGB(1, 1, 1)
    button.Text = name
    button.Parent = frame

    button.MouseButton1Click:Connect(function()
        action()
    end)
end

-- Função para parar o loop
local function stopLoop()
    _G.Loop = false
end

-- Função para mover o GUI
local function startDrag()
    isDragging = true
    offset = frame.Position - UDim2.new(0, mouse.X, 0, mouse.Y)
end

local function stopDrag()
    isDragging = false
end

-- Adicionar botões com funções
createButton("Toggle GUI", function()
    guiOpen = not guiOpen
    frame.Visible = guiOpen
end)

createButton("Collect Stones", function()
    _G.Loop = true
    while _G.Loop and task.wait() do
        local args = {
            [1] = {
                ["Type"] = "Stone",
                ["Action"] = "InstanceCollected",
                ["Count"] = 10000
            }
        }
        game:GetService("ReplicatedStorage").Remotes.GuiEvent:FireServer(unpack(args))
    end
end)

createButton("Equip Large Backpack", function()
    local args = {
        [1] = {
            ["Action"] = "EquipTool",
            ["ToolName"] = "Large Backpack"
        }
    }
    game:GetService("ReplicatedStorage").Remotes.GuiEvent:FireServer(unpack(args))
end)

createButton("Equip Cyber Sword", function()
    local args = {
        [1] = {
            ["Action"] = "EquipTool",
            ["ToolName"] = "Cyber Sword"
        }
    }
    game:GetService("ReplicatedStorage").Remotes.GuiEvent:FireServer(unpack(args))
end)

createButton("Equip Cyber Pickaxe", function()
    local args = {
        [1] = {
            ["Action"] = "EquipTool",
            ["ToolName"] = "Cyber Pickaxe"
        }
    }
    game:GetService("ReplicatedStorage").Remotes.GuiEvent:FireServer(unpack(args))
end)

createButton("Collect Emeralds", function()
    _G.Loop = true
    while _G.Loop and task.wait() do
        local args = {
            [1] = {
                ["Type"] = "EmeraldPice3",
                ["Action"] = "InstanceCollected",
                ["Count"] = 100
            }
        }
        game:GetService("ReplicatedStorage").Remotes.GuiEvent:FireServer(unpack(args))
    end
end)

createButton("Sell Items", function()
    _G.Loop = true
    while _G.Loop and task.wait(1) do
        local args = {
            [1] = {
                ["Action"] = "Sold"
            }
        }
        game:GetService("ReplicatedStorage").Remotes.GuiEvent:FireServer(unpack(args))
    end
end)

createButton("Stop Loop", stopLoop)

-- Adicionar funcionalidade de arrastar
frame.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.UserInputType == Enum.UserInputType.MouseButton1 then
        startDrag()
    end
end)

frame.InputChanged:Connect(function(input)
    if isDragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        frame.Position = UDim2.new(0, input.Position.X + offset.X, 0, input.Position.Y + offset.Y)
    end
end)

frame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        stopDrag()
    end
end)
